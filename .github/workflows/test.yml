name: Tests

on: [push, pull_request]

jobs:
  test:
    name: Test Python Code
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest, windows-latest, macOS-latest]
        pandoc-version: [2.9.2]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Pandoc
      uses: r-lib/actions/setup-pandoc@17a1d0974b01bda3ebc4ac417006507c8c0f4d81
      with:
        # pandoc-versions from 2.7.3 to 2.9.1 won't install on Windows
        # https://github.com/jgm/pandoc/issues/6071
        pandoc-version: ${{ matrix.pandoc-version }}
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ".[all]"
    - name: Test with pytest
      env:
        GITHUB_PULL_REQUEST_SHA: ${{ github.event.pull_request.head.sha }}
      run: |
        pytest -rs --color=yes

  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Python
      uses: actions/setup-python@v2
    - name: Install dependencies
      run: pip install black flake8
    - name: Check formatting
      run: |
        # if the following command fails, run `black .` locally to reformat the code.
        # ensure your local version of black matches the version installed on CI,
        # which will usually be the latest version from https://pypi.org/project/black/
        black --check --diff .
    - name: Check style
      run: flake8

  docs:
    name: Build docs
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Python
      uses: actions/setup-python@v2
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install ".[all]"
    - name: Build docs
      run: |
        # temporary workaround for portray "Module not found" error https://git.io/JeR9C
        export PYTHONPATH=.
        portray as_html --overwrite --output_dir=docs
    - name: Deploy docs
      if: github.ref == 'refs/heads/master' && github.event_name == 'push' && !github.event.repository.fork
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs
        publish_branch: gh-pages
