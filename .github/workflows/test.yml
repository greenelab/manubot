name: Tests
on:
- push
- pull_request
jobs:

  pytest:
    name: Python Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        - macOS-latest
        python-version:
        - 3.6
        - 3.7
        - 3.8
        - 3.9
        pandoc-version:
        - 2.11.1.1
        panflute-version:
        - 1.12.5
        include:
        - os: ubuntu-latest
          python-version: 3.9
          pandoc-version: 2.9.2
          panflute-version: 1.12.5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Pandoc
      uses: r-lib/actions/setup-pandoc@9598b8eeb6d88de7d76d580d84443542bbfdffce
      with:
        # pandoc-versions from 2.7.3 to 2.9.1 won't install on Windows
        # https://github.com/jgm/pandoc/issues/6071
        pandoc-version: ${{ matrix.pandoc-version }}
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ".[all]" panflute==${{ matrix.panflute-version }}
    - name: Test with pytest
      env:
        GITHUB_PULL_REQUEST_SHA: ${{ github.event.pull_request.head.sha }}
      run: |
        pytest -rs --color=yes

  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Python
      uses: actions/setup-python@v2
    - name: Install dependencies
      run: pip install black flake8
    - name: Check formatting
      run: |
        # if the following command fails, run `black .` locally to reformat the code.
        # ensure your local version of black matches the version installed on CI,
        # which will usually be the latest version from https://pypi.org/project/black/
        black --check --diff .
    - name: Check style
      run: flake8

  docs:
    name: Build Docs
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Python
      uses: actions/setup-python@v2
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install ".[all]"
    - name: Build docs
      run: |
        # temporary workaround for portray "Module not found" error https://git.io/JeR9C
        export PYTHONPATH=.
        portray as_html --overwrite --output_dir=docs
    - name: Deploy docs
      if: github.ref == 'refs/heads/master' && github.event_name == 'push' && !github.event.repository.fork
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs
        publish_branch: gh-pages
